2019-10-28 12:36:55 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-10-28 12:44:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:44:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 12:46:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:46:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:46:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 12:46:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:54:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:54:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 12:55:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:55:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:55:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 12:56:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:56:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:56:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 12:57:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:57:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 12:57:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 12:58:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:01:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:01:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 13:02:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:08:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:08:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 13:09:10 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-10-28 13:09:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:12:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:12:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 13:15:14 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-10-28 13:15:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:20:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-10-28 13:20:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-10-28 13:21:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 11:43:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 11:43:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 11:44:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 14:35:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 14:35:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 14:37:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SELECT * FROM ORDER[*] WHERE HOST = ?"; attendu "identifier"
Syntax error in SQL statement "SELECT * FROM ORDER[*] WHERE HOST = ?"; expected "identifier"; SQL statement:
SELECT * FROM ORDER WHERE HOST = ? [42001-199]
2019-12-02 18:00:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 18:00:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 18:16:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 18:48:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 18:48:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 18:50:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 18:51:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 18:51:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 18:58:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 18:58:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 19:00:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 19:01:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 19:12:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 19:12:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 19:12:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 19:14:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 19:26:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 19:26:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 19:28:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 19:48:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 19:48:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 19:50:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 20:04:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 20:04:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 20:05:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 21:02:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-02 21:02:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-02 21:04:08 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
2019-12-02 21:04:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-12-04 09:37:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 09:37:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-04 09:41:15 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-12-04 09:41:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 09:43:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 09:43:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-04 09:44:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:01:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:01:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-04 10:02:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:02:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:02:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-04 10:15:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:15:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-04 10:19:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:19:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:19:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST BIGINT, TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host bigint, time date, primary key (cust_id)) [42001-199]
2019-12-04 10:19:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 10:19:53 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-12-04 13:48:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 13:48:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 13:50:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SELECT * FROM ORDER[*] WHERE HOST = ?"; attendu "identifier"
Syntax error in SQL statement "SELECT * FROM ORDER[*] WHERE HOST = ?"; expected "identifier"; SQL statement:
SELECT * FROM ORDER WHERE HOST = ? [42001-199]
2019-12-04 13:54:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:22:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:22:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:22:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:23:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:23:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:24:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:24:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:24:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:25:44 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$482b1242.CGLIB$jpaVendorAdapter$3(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$482b1242$$FastClassBySpringCGLIB$$85478002.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$482b1242.jpaVendorAdapter(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at projet.poopngo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 100 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 94 more
2019-12-04 21:25:49 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at projet.poopngo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 73 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 67 more
2019-12-04 21:26:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "SELECT * FROM ORDER[*] WHERE HOST = ?"; attendu "identifier"
Syntax error in SQL statement "SELECT * FROM ORDER[*] WHERE HOST = ?"; expected "identifier"; SQL statement:
SELECT * FROM ORDER WHERE HOST = ? [42001-199]
2019-12-04 21:31:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:31:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:31:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:31:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:31:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:31:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:31:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:36:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:36:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:38:08 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$b2a9e6e4.CGLIB$jpaVendorAdapter$4(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$b2a9e6e4$$FastClassBySpringCGLIB$$4061e657.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$b2a9e6e4.jpaVendorAdapter(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at projet.poopngo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 100 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 94 more
2019-12-04 21:38:10 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at projet.poopngo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 73 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 67 more
2019-12-04 21:43:10 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-12-04 21:43:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:45:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:45:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:47:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:47:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:47:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:47:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:48:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:48:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:51:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:51:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:51:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 21:51:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:51:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 21:51:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 22:09:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 22:10:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-04 22:10:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-04 22:24:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-05 08:42:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-05 08:42:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-05 08:44:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-05 08:44:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-05 08:44:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-05 08:44:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:26:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:27:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:27:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 13:32:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:32:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 13:33:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:33:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:33:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 13:33:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:34:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:34:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 13:35:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:35:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:35:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 13:41:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:41:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (ID)) "; expected "identifier"; SQL statement:
create table order (id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (id)) [42001-199]
2019-12-08 13:41:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:51:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 13:51:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 13:53:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:08:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:08:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (ID BIGINT NOT NULL, TEXT VARCHAR(255), SOURCE_LOGIN VARCHAR(255), TARGET_LOGIN VARCHAR(255), PRIMARY KEY (ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (ID BIGINT NOT NULL, TEXT VARCHAR(255), SOURCE_LOGIN VARCHAR(255), TARGET_LOGIN VARCHAR(255), PRIMARY KEY (ID)) "; expected "identifier"; SQL statement:
create table order (id bigint not null, text varchar(255), source_login varchar(255), target_login varchar(255), primary key (id)) [42001-199]
2019-12-08 14:08:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "ALTER TABLE ORDER[*] ADD CONSTRAINT FKTQ2NPD6LXNB1KDDDXXKBIPKND FOREIGN KEY (SOURCE_LOGIN) REFERENCES PERSON "; attendu "identifier"
Syntax error in SQL statement "ALTER TABLE ORDER[*] ADD CONSTRAINT FKTQ2NPD6LXNB1KDDDXXKBIPKND FOREIGN KEY (SOURCE_LOGIN) REFERENCES PERSON "; expected "identifier"; SQL statement:
alter table order add constraint FKtq2npd6lxnb1kdddxxkbipknd foreign key (source_login) references person [42001-199]
2019-12-08 14:08:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "ALTER TABLE ORDER[*] ADD CONSTRAINT FKA680RF23IYEWADKSHU055356F FOREIGN KEY (TARGET_LOGIN) REFERENCES PERSON "; attendu "identifier"
Syntax error in SQL statement "ALTER TABLE ORDER[*] ADD CONSTRAINT FKA680RF23IYEWADKSHU055356F FOREIGN KEY (TARGET_LOGIN) REFERENCES PERSON "; expected "identifier"; SQL statement:
alter table order add constraint FKa680rf23iyewadkshu055356f foreign key (target_login) references person [42001-199]
2019-12-08 14:09:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:09:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:09:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 14:09:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 14:10:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 14:10:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 14:10:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:10:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 14:11:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:11:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 14:11:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE ORDER[*] (CUST_ID BIGINT NOT NULL, ADDRESS VARCHAR(255), CLIENT BIGINT, HOST VARCHAR(255), TIME DATE, PRIMARY KEY (CUST_ID)) "; expected "identifier"; SQL statement:
create table order (cust_id bigint not null, address varchar(255), client bigint, host varchar(255), time date, primary key (cust_id)) [42001-199]
2019-12-08 14:11:24 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:706)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:692)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1154)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1165)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2019-12-08 14:11:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "DROP TABLE ORDER[*] IF EXISTS "; attendu "identifier"
Syntax error in SQL statement "DROP TABLE ORDER[*] IF EXISTS "; expected "identifier"; SQL statement:
drop table order if exists [42001-199]
2019-12-08 16:33:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de données a été fermée
The database has been closed; SQL statement:
drop table comment if exists [90098-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.engine.Session.getTransaction(Session.java:1709)
	at org.h2.mvstore.db.MVPrimaryIndex.getMap(MVPrimaryIndex.java:436)
	at org.h2.mvstore.db.MVPrimaryIndex.find(MVPrimaryIndex.java:417)
	at org.h2.mvstore.db.MVDelegateIndex.find(MVDelegateIndex.java:83)
	at org.h2.engine.Database.removeMeta(Database.java:1123)
	at org.h2.index.BaseIndex.removeChildrenAndResources(BaseIndex.java:117)
	at org.h2.engine.Database.removeSchemaObject(Database.java:2124)
	at org.h2.table.Table.removeIndexOrTransferOwnership(Table.java:1166)
	at org.h2.constraint.ConstraintUnique.removeChildrenAndResources(ConstraintUnique.java:104)
	at org.h2.engine.Database.removeSchemaObject(Database.java:2124)
	at org.h2.table.Table.removeChildrenAndResources(Table.java:560)
	at org.h2.mvstore.db.MVTable.removeChildrenAndResources(MVTable.java:626)
	at org.h2.engine.Database.removeSchemaObject(Database.java:2124)
	at org.h2.command.ddl.DropTable.executeDrop(DropTable.java:119)
	at org.h2.command.ddl.DropTable.update(DropTable.java:130)
	at org.h2.command.CommandContainer.update(CommandContainer.java:133)
	at org.h2.command.Command.executeUpdate(Command.java:267)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:815)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy87.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1040)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
2019-12-08 16:33:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de données est déjà fermée (pour désactiver la fermeture automatique à l'arrêt de la VM, ajoutez "; DB_CLOSE_ON_EXIT = FALSE" à l'URL db)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1237)
	at org.h2.jdbc.JdbcStatement.checkClosedForWrite(JdbcStatement.java:1222)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:213)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:815)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy87.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1040)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
2019-12-08 16:33:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de données est déjà fermée (pour désactiver la fermeture automatique à l'arrêt de la VM, ajoutez "; DB_CLOSE_ON_EXIT = FALSE" à l'URL db)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1237)
	at org.h2.jdbc.JdbcStatement.checkClosedForWrite(JdbcStatement.java:1222)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:213)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:815)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy87.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1040)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
2019-12-08 16:33:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de données est déjà fermée (pour désactiver la fermeture automatique à l'arrêt de la VM, ajoutez "; DB_CLOSE_ON_EXIT = FALSE" à l'URL db)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1237)
	at org.h2.jdbc.JdbcStatement.checkClosedForWrite(JdbcStatement.java:1222)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:213)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:815)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy87.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1040)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
2019-12-08 16:33:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de données est déjà fermée (pour désactiver la fermeture automatique à l'arrêt de la VM, ajoutez "; DB_CLOSE_ON_EXIT = FALSE" à l'URL db)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1237)
	at org.h2.jdbc.JdbcStatement.checkClosedForWrite(JdbcStatement.java:1222)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:213)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:815)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy87.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1040)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
2019-12-08 16:33:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de données est déjà fermée (pour désactiver la fermeture automatique à l'arrêt de la VM, ajoutez "; DB_CLOSE_ON_EXIT = FALSE" à l'URL db)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:708)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:242)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:185)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:83)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:90)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:547)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:815)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy87.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1040)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
2019-12-11 10:24:36 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$aff78742.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$aff78742$$FastClassBySpringCGLIB$$9f9c57e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$aff78742.jpaVendorAdapter(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at projet.poopngo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 100 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 94 more
2019-12-11 10:24:42 database: flush
org.h2.message.DbException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at projet.poopngo.DemoApplication.main(DemoApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Erreur générale: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 73 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/lucas/Documents/M1S1/web/projet/UJM-M1-WEB/java/projet/poopngo/haha.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 67 more
